{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andri\\\\Desktop\\\\Github\\\\pianio\\\\frontend\\\\src\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Victory from './Victory.js'; // TODO: get song from server, get number of keys based on difficulty\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numKeys = 6;\nconst songLength = 4;\nconst letters = ['D', 'F', 'G', 'H', 'J', 'K'];\nconst song = Array.from({\n  length: 4\n}, () => Math.floor(Math.random() * numKeys));\nconst songArray = Array(songLength).fill().map(() => Array(numKeys).fill(0));\n\nfor (let i = 0; i < songLength; i++) {\n  let blackTileIndex = song[i];\n  songArray[i][blackTileIndex] = 1;\n}\n\nconst getBoardAtPosition = pos => {\n  const newBoard = Array(3).fill().map(() => Array(numKeys).fill(0));\n\n  for (let i = 0; i < 3; i++) {\n    let blackTileIndex = song[pos + i];\n    newBoard[i][blackTileIndex] = 1;\n  }\n\n  return newBoard;\n};\n\nfunction Game() {\n  _s();\n\n  const [position, setPosition] = useState(0);\n  const [hasWon, setHasWon] = useState(false);\n  const [hasLost, setHasLost] = useState(false);\n  const [board, setBoard] = useState(getBoardAtPosition(0));\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(true);\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 100);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  const handleKeyPress = event => {\n    console.log(event.key);\n    const tilePressed = letters.indexOf(event.key.toUpperCase());\n    if (tilePressed === -1) return;\n    const correctTile = song[position];\n\n    if (tilePressed === correctTile) {\n      if (position === song.length - 1) {\n        setHasWon(true);\n        setIsActive(false);\n      } else {\n        setBoard(getBoardAtPosition(position + 1));\n      }\n\n      setPosition(position + 1);\n    } else {\n      setHasLost(true);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hasWon && /*#__PURE__*/_jsxDEV(Victory, {\n      time: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }, this), !hasWon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piano\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timer\",\n          children: [Number(seconds / 10).toFixed(1), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: col ? \"tile tile-black\" : \"tile tile-white\",\n            children: i === 0 ? letters[j] : ''\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-board\",\n        children: songArray.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((col, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: position === i ? \"tile-small tile-red\" : col ? \"tile-small tile-black\" : \"tile-small tile-white\"\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Game, \"I4EstFOUA5Wz4gtgSIHqaLsVA1g=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/andri/Desktop/Github/pianio/frontend/src/Game.js"],"names":["React","useState","useEffect","Victory","numKeys","songLength","letters","song","Array","from","length","Math","floor","random","songArray","fill","map","i","blackTileIndex","getBoardAtPosition","pos","newBoard","Game","position","setPosition","hasWon","setHasWon","hasLost","setHasLost","board","setBoard","seconds","setSeconds","isActive","setIsActive","interval","setInterval","clearInterval","handleKeyPress","event","console","log","key","tilePressed","indexOf","toUpperCase","correctTile","document","addEventListener","removeEventListener","Number","toFixed","row","col","j"],"mappings":"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","sourcesContent":["import './App.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Victory from './Victory.js'\r\n// TODO: get song from server, get number of keys based on difficulty\r\nconst numKeys = 6\r\nconst songLength = 4\r\nconst letters = ['D', 'F', 'G', 'H', 'J', 'K']\r\nconst song = Array.from({length: 4}, () => Math.floor(Math.random() * numKeys));\r\nconst songArray = Array(songLength).fill().map(() => Array(numKeys).fill(0));\r\nfor (let i = 0; i < songLength; i++) {\r\n  let blackTileIndex = song[i]\r\n  songArray[i][blackTileIndex] = 1\r\n}\r\n\r\nconst getBoardAtPosition = (pos) => {\r\n    const newBoard = Array(3).fill().map(() => Array(numKeys).fill(0));\r\n    for (let i = 0; i < 3; i++) {\r\n        let blackTileIndex = song[pos + i]\r\n        newBoard[i][blackTileIndex] = 1\r\n    }\r\n    return newBoard\r\n}\r\n\r\nfunction Game() {\r\n    const [position, setPosition] = useState(0)\r\n    const [hasWon, setHasWon] = useState(false)\r\n    const [hasLost, setHasLost] = useState(false)\r\n    const [board, setBoard] = useState(getBoardAtPosition(0))\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [isActive, setIsActive] = useState(true);\r\n\r\n    useEffect(() => {\r\n      let interval = null;\r\n      if (isActive) {\r\n        interval = setInterval(() => {\r\n          setSeconds(seconds => seconds + 1);\r\n        }, 100);\r\n      } else if (!isActive && seconds !== 0) {\r\n        clearInterval(interval);\r\n      }\r\n      return () => clearInterval(interval);\r\n    }, [isActive, seconds]);\r\n\r\n    const handleKeyPress = (event) => {\r\n        console.log(event.key)\r\n        const tilePressed = letters.indexOf(event.key.toUpperCase())\r\n        if (tilePressed === -1) return\r\n\r\n        const correctTile = song[position]\r\n        if (tilePressed === correctTile) {\r\n            if (position === song.length-1) {\r\n                setHasWon(true)\r\n                setIsActive(false)\r\n            } else {\r\n                setBoard(getBoardAtPosition(position + 1))\r\n            }\r\n            setPosition(position + 1)\r\n        } else {\r\n            setHasLost(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyPress)\r\n        return () => {\r\n          document.removeEventListener(\"keydown\", handleKeyPress)\r\n        }\r\n    }, [handleKeyPress])\r\n  \r\n    return (\r\n      <div>\r\n        {hasWon && <Victory time = {seconds} />}\r\n        {!hasWon &&\r\n      <div className=\"flex-container\">\r\n      <div className=\"piano\">\r\n      <p className=\"timer\">{Number(seconds / 10).toFixed(1)}s</p>\r\n        {board.map((row, i) => (\r\n          <div key={i} className=\"row\">\r\n            { row.map((col, j) => (\r\n              <div key={j}\r\n              className={col ? \"tile tile-black\" : \"tile tile-white\" }>\r\n                  {i === 0 ? letters[j] : ''}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"progress-board\">\r\n        {songArray.map((row, i) => (\r\n          <div key={i} className=\"row\">\r\n            { row.map((col, j) => (\r\n              <div key={j}\r\n              className={position === i ? \"tile-small tile-red\" : \r\n              (col ? \"tile-small tile-black\" : \"tile-small tile-white\") }>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      </div>}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Game"]},"metadata":{},"sourceType":"module"}